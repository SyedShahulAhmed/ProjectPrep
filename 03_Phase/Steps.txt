
# 📚 Phase 3: AI Basics (Step-by-Step)

---

## **Step 1 — Setup backend to call AI** 🛠️

* 🎯 Goal: make your server able to talk to Gemini.
* ✅ Actions:

  1. Create `backend/server.js` (Express + ESM).
  2. Add `express.json()`, `cors`, `dotenv`.
  3. Add route `POST /api/ai`.
  4. Store Gemini API key in `.env`:

     ```env
     GEMINI_API_KEY=your_key_here
     ```
  5. Test with `Invoke-RestMethod` in PowerShell or `curl` in Git Bash.
* 🧪 Result: backend returns a JSON reply (e.g., `"Paris"`).

---

## **Step 2 — Build frontend chat UI** 💬

* 🎯 Goal: send a message from browser → backend → Gemini → back to browser.
* ✅ Actions:

  1. Use Vite + React + Tailwind.
  2. Create chat window, message bubbles, input, send button.
  3. Add `fetch("http://localhost:4000/api/ai", {...})` call.
  4. Press Enter or click **Send** → backend reply shows in UI.
* 🧪 Result: You can chat with Gemini in your browser!

---

## **Step 3 — Streaming & Polishing** ⚡

* 🎯 Goal: make replies feel instant & improve UX.
* ✅ Actions:

  1. Update backend to support streaming responses (Gemini can stream).
  2. Frontend uses `ReadableStream` or `EventSource` → shows text as it arrives (typing effect).
  3. Add “Stop” button to cancel a generation.
  4. Small polish: avatars (user vs AI), timestamps, scroll-to-bottom.
* 🧪 Result: Chat feels real-time and smoother.

---

## **Step 4 — Extras: Authentication & History** 🔐

* 🎯 Goal: secure and extend your chatbot.
* ✅ Actions:

  1. Add JWT login (so only logged-in users use `/api/ai`).
  2. Store conversation history in MongoDB.
  3. Create conversation list in frontend (switch between old chats).
* 🧪 Result: Each user has their own chat history, secure API usage.

---

## **Step 5 — Deployment** 🚀

* 🎯 Goal: put app online so you can share.
* ✅ Actions:

  1. Deploy **backend** (Render / Google Cloud Run / Railway).
  2. Deploy **frontend** (Vercel / Netlify).
  3. Add production URLs in backend CORS list.
  4. Store `GEMINI_API_KEY` securely in host’s env settings.
* 🧪 Result: Public link where anyone can chat with your Gemini bot.

---

# ✅ Phase 3 Big Picture

* **Step 1:** Backend Gemini API proxy (done 🟢).
* **Step 2:** Frontend chat UI (done 🟢).
* **Step 3:** Streaming + polish (next 🔜).
* **Step 4:** Auth + DB (optional, advanced).
* **Step 5:** Deploy online (shareable link).
